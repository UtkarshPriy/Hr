const express = require('express');
const { PDFDocument, rgb } = require('pdf-lib');
const fs = require('fs');
const app = express();

app.use(express.json());

app.post('/sign-pdf', async (req, res) => {
    const { name, location, reason, contact, timestamp, signatureImage } = req.body;

    try {
        // Load an existing PDF or create a new one
        const pdfDoc = await PDFDocument.create();
        const page = pdfDoc.addPage([600, 400]);

        // Add signature details to the PDF
        page.drawText(`Name: ${name}`, { x: 50, y: 350, size: 12 });
        page.drawText(`Location: ${location}`, { x: 50, y: 330, size: 12 });
        page.drawText(`Reason: ${reason}`, { x: 50, y: 310, size: 12 });
        page.drawText(`Contact Information: ${contact}`, { x: 50, y: 290, size: 12 });
        page.drawText(`Date and Time: ${timestamp}`, { x: 50, y: 270, size: 12 });

        // Add the signature image to the PDF
        if (signatureImage) {
            const signatureBytes = fs.readFileSync(signatureImage);
            const signatureImageEmbed = await pdfDoc.embedPng(signatureBytes);
            const signatureDims = signatureImageEmbed.scale(0.5);
            page.drawImage(signatureImageEmbed, {
                x: 50,
                y: 200,
                width: signatureDims.width,
                height: signatureDims.height,
            });
        }

        // Save the PDF to a file or return it as a response
        const pdfBytes = await pdfDoc.save();
        fs.writeFileSync('signed_document.pdf', pdfBytes);

        res.send('PDF signed successfully');
    } catch (error) {
        console.error(error);
        res.status(500).send('An error occurred while signing the PDF');
    }
});

app.listen(3000, () => {
    console.log('Server started on http://localhost:3000');
});
